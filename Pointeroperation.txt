#include <stdio.h>
int main ()
{
	int urn[5] = {100, 200, 300, 400, 500};
		int *ptr1, *ptr2, *ptr3;  
		ptr1 = urn;                 //把一个地址赋给指针 
		ptr2 = &urn[2];            //把数组第3个元素的地址赋给指针
	printf("pointer value,dereferenced pointer, pointer address:\n"); //指针的值，解引指针所指向的值，指针的地址 
	printf("ptr1 = %p, *ptr1 =%d, &ptr= %p\n ",ptr1, * ptr1, &ptr1);  // 打印出来
	//指针加法 
	ptr3 = ptr1 + 4;
	printf("/nadding an int to a pointer:\n");
	printf("ptr1 + 4 = %p, *(ptr1 + 4) = %d\n",ptr1 + 4, *(ptr1 + 4));
	ptr1++;                        //递增指针 
	printf ("\nvalues after ptr1++:\n");
	printf ("ptr1 = %p, *ptr1 =%d, &ptr= %p\n",ptr1, *ptr1, &ptr1);
	ptr2--;                       //递减指针
	printf("\nvalues after ptr1--:\n");
	printf("ptr2 = %p, *ptr2 = %d, &ptr2 = %p",ptr2, *ptr2, &ptr2);
	--ptr1;                        //恢复初始值
	++ptr2;
	printf("\nPointers reset to original values:\n");
	printf("ptr1 = %p, *ptr1 =%d, &ptr1 =%p\n", ptr1, *ptr1, &ptr1);
	//指针相减
	printf("\nsubtracting one pointer from another:\n");
	printf("ptr2 = %p, ptr 1 =%p, ptr2 - ptr1 = %p\n",ptr2 ,ptr1 ,ptr2 - ptr1  );
	//一个指针减去另一个指针
	printf("\nsubtracting an int from one pointer:\n");
	printf("ptr3 = %p, ptr3 - 2 = %p\n",ptr3, ptr3 - 2);
	getchar();
	return 0; 
	 
}
